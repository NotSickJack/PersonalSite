body{
    background-color: $background-color;
    color: #fff;
    font-family: $fontRegular;
    transition: 0.3s ease-out;

}
/* Custom cursor */
body::after {
    content: "X";
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: $fontBold;
    z-index: 999;
    top: var(--y);
    left: var(--x);
    right: 0;
    bottom: 0;
    width: 2.5em;
    height: 2.5em;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    background: #fff;
    mix-blend-mode: difference;
    pointer-events: none;
    transition: width 0.4s ease-in-out;
    transition: height 0.4s ease-in-out;
    font-size: 1.5rem;
    transform-origin: center
}

.img-hovered::after{
    outline: 2px solid #fff;
    background: $background-color;    
}


/* End custom cursor */

/* Canvas */
canvas {
    position: fixed;
    top: 0;
    left: 0;
  } 

/* End canvas */

/* Glitch effect */

.bg-noise {
    // Simple class to reuse wherever you want to make some noise.
    background: url("https://i.ibb.co/FgcVfGG/bg-noise-1.png"), $background-color;
    background-size: 300px 300px;
    animation: 250ms steps(10, end) 0s infinite alternate-reverse none running noise-animation;
    @keyframes noise-animation {
      0% { background-position: 0% 0%; }
      10% { background-position: -5% -5%; }
      20% { background-position: -10% 5%; }
      30% { background-position: 5% -10%; }
      40% { background-position: -5% 15%; }
      50% { background-position: -10% 5%; }
      60% { background-position: 5% 5%; }
      70% { background-position: 0% 10%; }
      80% { background-position: -5% -5%; }
      90% { background-position: 10% 5%; }
    }
  }

.glitching {

	color: $txtColor;
	position: relative; 
	text-shadow: 0 1px $glitchColor;
}

@keyframes noise-anim {
	@for $i from 0 through $glitchSteps {
		#{percentage($i*(1/$glitchSteps))} {
			clip: rect(random(100)+px, 9999px, random(100)+px, 0);
		}
	}
}

.glitching:after {
	content: attr(data-text);
	position: absolute;
	left: -1px;
	text-shadow: 1px 0  $glitchColor;
	top: 0;
	color: $txtColor;
    background: $txtBgColor;
	overflow: hidden;
	animation: noise-anim $glitchTime infinite linear alternate-reverse;
	width: 100%;
}

/* End glitch effect */

.flex{
    display: flex;
    justify-content: space-between;
    padding: 20px;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 100;
    li{
        text-transform: uppercase;
        font-size: 16px;
    }
    a{
        position: relative;
        font-family: $fontBold;
        }
    a::before{
        content: '';
        position: absolute;
        left: 0;
        bottom: -5px;
        width: 100%;
        height: 2px;
        background-color: $txtColor;
        border-radius: 20px;
        scale: 0.1;
        transform-origin: right;
        transition: scale 0.25s;
    }
    a:hover::before{
        scale: 1;
        transform-origin: left;

    }
}
.main-content{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100vh;
    align-items: center;
    margin: 20px;
    padding-left: 80px;
    p{
        font-size: 2rem;
    }
    .highlight{
    font-size: 2.5rem;
    font-family: $fontBold;
    }
}